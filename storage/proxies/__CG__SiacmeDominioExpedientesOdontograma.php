<?php

namespace DoctrineProxies\__CG__\Siacme\Dominio\Expedientes;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Odontograma extends \Siacme\Dominio\Expedientes\Odontograma implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'id', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'odontogramaDientes', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'otrosTratamientos', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'atendido', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'costo', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'expedienteEspecialidad'];
        }

        return ['__isInitialized__', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'id', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'odontogramaDientes', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'otrosTratamientos', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'atendido', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'costo', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\Odontograma' . "\0" . 'expedienteEspecialidad'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Odontograma $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getOdontogramaDientes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOdontogramaDientes', []);

        return parent::getOdontogramaDientes();
    }

    /**
     * {@inheritDoc}
     */
    public function getOtrosTratamientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtrosTratamientos', []);

        return parent::getOtrosTratamientos();
    }

    /**
     * {@inheritDoc}
     */
    public function atendido()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'atendido', []);

        return parent::atendido();
    }

    /**
     * {@inheritDoc}
     */
    public function getExpedienteEspecialidad()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpedienteEspecialidad', []);

        return parent::getExpedienteEspecialidad();
    }

    /**
     * {@inheritDoc}
     */
    public function getCosto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCosto', []);

        return parent::getCosto();
    }

    /**
     * {@inheritDoc}
     */
    public function agregarOdontogramaDiente(\Siacme\Dominio\Expedientes\OdontogramaDiente $odontogramaDiente)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'agregarOdontogramaDiente', [$odontogramaDiente]);

        return parent::agregarOdontogramaDiente($odontogramaDiente);
    }

    /**
     * {@inheritDoc}
     */
    public function getOdontogramaDiente($numero)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOdontogramaDiente', [$numero]);

        return parent::getOdontogramaDiente($numero);
    }

    /**
     * {@inheritDoc}
     */
    public function removerPadecimientosADiente($numero)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removerPadecimientosADiente', [$numero]);

        return parent::removerPadecimientosADiente($numero);
    }

    /**
     * {@inheritDoc}
     */
    public function agregarPadecimientoADiente($numero, \Siacme\Dominio\Expedientes\DientePadecimiento $dientePadecimiento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'agregarPadecimientoADiente', [$numero, $dientePadecimiento]);

        return parent::agregarPadecimientoADiente($numero, $dientePadecimiento);
    }

    /**
     * {@inheritDoc}
     */
    public function tieneOtrosTratamientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'tieneOtrosTratamientos', []);

        return parent::tieneOtrosTratamientos();
    }

    /**
     * {@inheritDoc}
     */
    public function agregarOtroTratamiento(\Siacme\Dominio\Expedientes\OtroTratamiento $otroTratamiento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'agregarOtroTratamiento', [$otroTratamiento]);

        return parent::agregarOtroTratamiento($otroTratamiento);
    }

    /**
     * {@inheritDoc}
     */
    public function quitarOtroTratamiento(\Siacme\Dominio\Expedientes\OtroTratamiento $otroTratamiento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'quitarOtroTratamiento', [$otroTratamiento]);

        return parent::quitarOtroTratamiento($otroTratamiento);
    }

    /**
     * {@inheritDoc}
     */
    public function todosLosDientesTienenTratamientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'todosLosDientesTienenTratamientos', []);

        return parent::todosLosDientesTienenTratamientos();
    }

    /**
     * {@inheritDoc}
     */
    public function costo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'costo', []);

        return parent::costo();
    }

    /**
     * {@inheritDoc}
     */
    public function costoFormato()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'costoFormato', []);

        return parent::costoFormato();
    }

    /**
     * {@inheritDoc}
     */
    public function agregarTratamiento($numero, \Siacme\Dominio\Expedientes\DientePlan $dientePlan)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'agregarTratamiento', [$numero, $dientePlan]);

        return parent::agregarTratamiento($numero, $dientePlan);
    }

    /**
     * {@inheritDoc}
     */
    public function eliminarTratamiento($numero, \Siacme\Dominio\Expedientes\DienteTratamiento $dienteTratamiento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eliminarTratamiento', [$numero, $dienteTratamiento]);

        return parent::eliminarTratamiento($numero, $dienteTratamiento);
    }

    /**
     * {@inheritDoc}
     */
    public function asignadoA(\Siacme\Dominio\Expedientes\ExpedienteJohanna $expedienteJohanna)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'asignadoA', [$expedienteJohanna]);

        return parent::asignadoA($expedienteJohanna);
    }

}
