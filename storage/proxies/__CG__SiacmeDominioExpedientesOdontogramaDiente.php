<?php

namespace DoctrineProxies\__CG__\Siacme\Dominio\Expedientes;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OdontogramaDiente extends \Siacme\Dominio\Expedientes\OdontogramaDiente implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'id', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'odontograma', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'diente', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'padecimientos', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'tratamientos'];
        }

        return ['__isInitialized__', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'id', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'odontograma', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'diente', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'padecimientos', '' . "\0" . 'Siacme\\Dominio\\Expedientes\\OdontogramaDiente' . "\0" . 'tratamientos'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OdontogramaDiente $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getOdontograma()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOdontograma', []);

        return parent::getOdontograma();
    }

    /**
     * {@inheritDoc}
     */
    public function getDiente()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiente', []);

        return parent::getDiente();
    }

    /**
     * {@inheritDoc}
     */
    public function getPadecimientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPadecimientos', []);

        return parent::getPadecimientos();
    }

    /**
     * {@inheritDoc}
     */
    public function getTratamientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTratamientos', []);

        return parent::getTratamientos();
    }

    /**
     * {@inheritDoc}
     */
    public function tienePadecimientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'tienePadecimientos', []);

        return parent::tienePadecimientos();
    }

    /**
     * {@inheritDoc}
     */
    public function tieneTratamientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'tieneTratamientos', []);

        return parent::tieneTratamientos();
    }

    /**
     * {@inheritDoc}
     */
    public function removerPadecimientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removerPadecimientos', []);

        return parent::removerPadecimientos();
    }

    /**
     * {@inheritDoc}
     */
    public function agregarPadecimiento(\Siacme\Dominio\Expedientes\DientePadecimiento $dientePadecimiento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'agregarPadecimiento', [$dientePadecimiento]);

        return parent::agregarPadecimiento($dientePadecimiento);
    }

    /**
     * {@inheritDoc}
     */
    public function removerPadecimiento(\Siacme\Dominio\Expedientes\DientePadecimiento $dientePadecimiento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removerPadecimiento', [$dientePadecimiento]);

        return parent::removerPadecimiento($dientePadecimiento);
    }

    /**
     * {@inheritDoc}
     */
    public function agregarTratamiento(\Siacme\Dominio\Expedientes\DientePlan $dientePlan)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'agregarTratamiento', [$dientePlan]);

        return parent::agregarTratamiento($dientePlan);
    }

    /**
     * {@inheritDoc}
     */
    public function eliminarTratamiento(\Siacme\Dominio\Expedientes\DienteTratamiento $dienteTratamiento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eliminarTratamiento', [$dienteTratamiento]);

        return parent::eliminarTratamiento($dienteTratamiento);
    }

    /**
     * {@inheritDoc}
     */
    public function removerDiente()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removerDiente', []);

        return parent::removerDiente();
    }

    /**
     * {@inheritDoc}
     */
    public function agregarDiente(\Siacme\Dominio\Expedientes\Diente $diente)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'agregarDiente', [$diente]);

        return parent::agregarDiente($diente);
    }

    /**
     * {@inheritDoc}
     */
    public function removerOdontograma()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removerOdontograma', []);

        return parent::removerOdontograma();
    }

    /**
     * {@inheritDoc}
     */
    public function agregarOdontograma(\Siacme\Dominio\Expedientes\Odontograma $odontograma)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'agregarOdontograma', [$odontograma]);

        return parent::agregarOdontograma($odontograma);
    }

    /**
     * {@inheritDoc}
     */
    public function costoTratamientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'costoTratamientos', []);

        return parent::costoTratamientos();
    }

    /**
     * {@inheritDoc}
     */
    public function atenderTratamientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'atenderTratamientos', []);

        return parent::atenderTratamientos();
    }

    /**
     * {@inheritDoc}
     */
    public function tratamientosAtendidos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'tratamientosAtendidos', []);

        return parent::tratamientosAtendidos();
    }

    /**
     * {@inheritDoc}
     */
    public function descripcionTratamientos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'descripcionTratamientos', []);

        return parent::descripcionTratamientos();
    }

}
